Block elements Vs Inline elements:
Block - span the entire screen eg <div>, <p>, <h1>...<h6>, <fieldset>

Inline - occupy only as much space as reqd
<input>, <span>



Functions:
- User-def functions
- pre-defined function : isNan(), isFinite(), parseInt(), parseFloat()


<script>
          console.log(parseInt("123"))  //123
          console.log(parseInt("123abc"))  //123
          console.log(parseInt("123abc456")) //123
          console.log(parseInt("123.45"))  //123
          console.log(parseInt("abc123"))  //NaN

          console.log(parseFloat("123")) //123
          console.log(parseFloat("123.45"))  //123.45
         
        </script>




variable Scope:
- local
- global



Objects:
Rule:
- Every JS obj exposes both - properties and methods/function
- Every JS property is read/write

- Pre-defined / Core objects
- User defined objects


obj.property
obj.method()



Pre-defined / Core objects:
string, date, math, array, boolean, number, regexp...


String:
- properties : length, prototype XXX
- methods : many

substr()
subString()
slice()

Math

<script>
           console.log(Math.PI)
           console.log(Math.SQRT2)
           console.log(Math.SQRT1_2)

           console.log(Math.abs(-100)) //100
           console.log(Math.pow(3,4))  //81
           console.log(Math.min(5,2,8,1,3)) //1
           console.log(Math.max(5,2,8,1,3))  //8

           console.log(Math.floor(3.7))  //3
           console.log(Math.ceil(3.7))  //4

        </script>


Date

setXXX()
getXXX()

setDay()


int[] arr = new int[5]

<script>
            /* var arr1 = new Array()
           arr1[0] = 10
           arr1[1] = 20
           arr1[2] = 30
           arr1[3] = 40
           arr1[5] = 50

          for(no of arr1)
            console.log(no)

            arr1[4] = "new value"

            for(no of arr1)
            console.log(no)


      var arr = [11,22,33,44,55] 
         
         for(no of arr)
           console.log(no)

        var names = ["Tejas","Bela","Abhijit","Ajit"]
        for(name of names)
           console.log(name, name.length)


        var arr = []  //empty array
        arr.push(10)
          console.log(arr.length, arr)

        arr.push(20,30,40)
          console.log(arr.length, arr)


         var students = ["Tejas"]
         students.push("Aditya")
         students.push("Ajit")

         for(name of students)
           console.log(name)


           var nos = [4,2,1,11,77,555] 

           console.log(nos.reverse())
           console.log(nos.sort()) //1,2,4,11,77,555*/

           //var str = "One Two Three Four Five"
           //var arr = str.split(" ")        

           var names = ["Tejas","Bela","Abhijit","Ajit"]
           //var str = names.join("#")
           //console.log(str)

          /* console.log(names.length, names)
           delete names[1]

           console.log(names.length, names)*/

           names.pop()
           console.log(names.length, names)


    names.splice()


        </script>


-------------------------------
User defined objects: 5 ways:
- Object initializer  --> JSON
- Class  ES6 feature





